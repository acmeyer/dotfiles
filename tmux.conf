#######################################
# Configuration
#######################################
# colors
set -g default-terminal "screen-256color"

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# use vim key bindings
setw -g mode-keys vi

# keep plenty of history
set -g history-limit 10000
# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# increase repeat time for repeatable commands
set -g repeat-time 1000

# re-number windows when one is closed
set -g renumber-windows on

set -g base-index 1

bind-key b break-pane -d

# session navigation
bind-key C-j choose-tree

########################################
# Key Bindings
########################################

# Prefix
unbind C-b
set -g prefix C-a

# resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# bind r key to resource this file
unbind r
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded" 

# Enable C-a C-a to go to last window
bind-key C-a last-window

# Go to beginning of line
bind a send-prefix

# pane navigation
bind-key - split-window -v -c "#{pane_current_path}"
bind-key \ split-window -h -c "#{pane_current_path}"

# window navigation
bind c new-window -c '#{pane_current_path}'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#######################################
# Status Bar
#######################################
set -g status-bg green
set -g status-fg black
set -g status-left-length 40
set -g status-left ' [#S] '
set -g status-right " #(battery -t)  #(date '+%a, %b %d - %I:%M') "

set -g status-keys "emacs"

# Highlight current window
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg green

# Set color of active pane
set -g pane-border-fg colour235
set -g pane-border-bg black
set -g pane-active-border-fg green
set -g pane-active-border-bg black

# Prompted join-pane
bind-key j command-prompt -p "join pane from: " "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: " "swap-pane -t '%%'"

bind-key C-b send-keys 'tat %% exit' 'C-m'
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'
